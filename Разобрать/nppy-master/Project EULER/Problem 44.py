'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The
first tenpentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 − 22 = 48, is not pentagonal. Find the pair of pentagonal numbers, Pj and
Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimized;
what is the value of D?
'''

num = 1
found = False
pentagonal_numbers = []


def is_pentagonal_number(n):
    '''Check if the number is pentagonal number'''

    n = (1 + (1 + 24 * n) ** 0.5) / 6
    return (n - int(n)) == 0


while not found:
    pent_num = int((num * (3 * num - 1)) / 2)

    for pn in pentagonal_numbers:
        _sum = pent_num + pn
        _diff = pent_num - pn

        if is_pentagonal_number(_sum) and is_pentagonal_number(_diff):
            print(pent_num - pn)
            found = True

    num += 1
    pentagonal_numbers.append(pent_num)
